/*
These cool functions and mixins are inspired/stolen from Bootstrap v4
*/

$grid_breakpoints: (
    phone: $phone,
    tablet: $tablet,
    tablet-landscape: $tablet-landscape,
    desktop: $desktop,
    desktop-lg: $desktop-lg,
    desktop-xl: $desktop-xl
) !default;

@mixin media-bp-min($bp-key, $or_this...) {
    $break-point: map-get($map: $grid-breakpoints, $key: $bp-key) + 0.0625rem;
    $media_query: '(min-width: #{$break-point})';
    @if (length($or_this) >0) {
        @for $i from 1 through length($or_this) {
            $extra: nth($or_this, $i);
            $media_query: '#{$media_query}, (#{$extra})';
        }
    }
    @media #{$media_query} {
        @content;
    }
}

@mixin media-bp-max($bp_key, $or_this...) {
    $max-break: breakpoint-next($bp_key);
    $break_point: map-get($map: $grid_breakpoints, $key: $max-break);
    $media_query: '(max-width: #{$break-point})';
    @if (length($or_this) >0) {
        @for $i from 1 through length($or_this) {
            $extra: nth($or_this, $i);
            $media_query: '#{$media_query}, (#{$extra})';
        }
    }
    @media #{$media_query} {
        @content;
    }
}

@mixin media-bp-only($bp_key) {
    $break_point_min: map-get($map: $grid_breakpoints, $key: $bp_key) + 0.0625rem;
    $break_point_max: map-get($map: $grid_breakpoints, $key: breakpoint-next($bp_key));
    @media (min-width: $break_point_min) and (max-width: $break_point_max) {
        @content;
    }
}

@mixin media-breakpoint-between($lower, $upper) {
    $break_point_min: map-get($map: $grid_breakpoints, $key: $lower);
    $break_point_max: map-get($map: $grid_breakpoints, $key: breakpoint-next($upper)) - 0.0625rem;
    @if $break_point_max {
        @media (min-width: $break_point_min) and (max-width: $break_point_max) {
            @content;
        }
    } @else {
        @media (min-width: $break_point_min) {
            @content;
        }
    }
}

@function breakpoint-next($bp_key) {
    $breakpoint_names: map-keys($grid_breakpoints);
    $n: index($breakpoint_names, $bp_key);
    @return if($n < length($breakpoint_names), nth($breakpoint_names, $n + 1), null);
}
